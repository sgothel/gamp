// Copyright (c) 2010-2025 Gothel Software e.K.
// Details see GearsES2.java

#if __VERSION__ >= 130
  #define attribute in
  #define varying out
#endif

uniform mat4 mgl_PMVMatrix[4]; // P, Mv, Mvi and Mvit
uniform vec3 mgl_LightPos;

attribute vec4 mgl_Vertex;
attribute vec4 mgl_Normal;

varying vec3 normal;
varying vec4 position;
varying vec3 lightDir;
varying float attenuation;
varying vec3 cameraDir;

const float constantAttenuation = 0.5; // 1.0;
const float linearAttenuation   = 0.001; // 0.0;
const float quadraticAttenuation= 0.0002; // 0.0;

void main(void)
{
    // Transforming The Vertex Position To ModelView-Space
    position  = mgl_PMVMatrix[1] * mgl_Vertex; // vertex eye position

    // incl. projection
    gl_Position = mgl_PMVMatrix[0] * position;

    // Transforming The Normal To ModelView-Space
    normal = normalize((mgl_PMVMatrix[3] * mgl_Normal).xyz);

    // Calculating The Vector From The Vertex Position To The Light Position
    lightDir = mgl_LightPos - position.xyz;
    float d = length(lightDir);
    attenuation = 1.0 / (
                       constantAttenuation +
                       linearAttenuation    * d +
                       quadraticAttenuation * d * d );
    lightDir = normalize(lightDir);
    cameraDir  = normalize((mgl_PMVMatrix[2] * vec4(0,0,0,1.0)).xyz - mgl_Vertex.xyz);
}
